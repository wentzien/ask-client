{"version":3,"sources":["components/eventLink.jsx","components/questionForm.jsx","components/question.jsx","components/questions.jsx","components/footer.jsx","components/events.jsx","components/notFound.js","components/home.jsx","App.jsx","serviceWorker.js","index.js"],"names":["EventLink","url","process","copyToClipboard","input","document","createElement","body","appendChild","value","props","eventId","select","execCommand","removeChild","style","marginBottom","className","onClick","this","Component","QuestionForm","state","question","errors","schema","Joi","string","min","max","required","label","joiSchema","object","validate","result","abortEarly","error","details","item","path","message","validateProperty","name","obj","handleSubmit","e","preventDefault","setState","callServer","onSubmit","handleChange","currentTarget","errorMessage","onChange","type","id","aria-describedby","disabled","width","Question","renderIconLike","localStorage","getItem","renderIconDelte","answered","creator","renderIconAnswered","data","onVote","onDelete","onAnswered","cardClass","textAlign","cursor","title","data-placement","data-toggle","votes","marginLeft","Questions","questions","map","q","key","Footer","marginTop","display","justifyContent","alignItems","href","Events","urlApi","newQuestion","a","match","params","event_id","socket","emit","on","console","log","setItem","insertId","voteQuestion","questionId","axios","put","handleVote","index","indexOf","handleDelete","handleAnswered","get","creator_key","io","sort","b","off","eventLink","NotFound","margin","Home","redirect","sub","handleNewEvent","generateId","eventKey","event","post","serverStatus","characters","charactersLength","length","i","charAt","Math","floor","random","Fragment","to","App","component","exact","Boolean","window","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.22a0d45f.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass EventLink extends Component {\r\n    url = process.env.REACT_APP_URL + process.env.REACT_APP_SUBDIRECTORIES;\r\n\r\n    copyToClipboard = () => {\r\n        // const input = this.input;\r\n        // input.select();\r\n        // document.execCommand(\"copy\");\r\n\r\n        const input = document.createElement(\"input\");\r\n        document.body.appendChild(input);\r\n        input.value = this.url + \"/events/\" + this.props.eventId;\r\n        input.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(input);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <button style={{marginBottom: \"20px\"}} className=\"btn btn-primary\" onClick={this.copyToClipboard}>Link f√ºr\r\n                Teilnehmer kopieren\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventLink;","import React, {Component} from 'react';\r\nimport Joi from 'joi-browser';\r\n\r\nclass QuestionForm extends Component {\r\n    state = {\r\n        question: {\r\n            question: ''\r\n        },\r\n        errors: {}\r\n    };\r\n\r\n    schema = {\r\n        question: Joi.string().min(3).max(512).required().label(\"Question\")\r\n    };\r\n\r\n    joiSchema = Joi.object(this.schema);\r\n\r\n    validate = () => {\r\n        const result = this.joiSchema.validate(this.state.question, {abortEarly: false});\r\n        if (!result.error) return null;\r\n\r\n        const errors = {};\r\n        for (let item of result.error.details)\r\n            errors[item.path[0]] = item.message;\r\n        return errors;\r\n    };\r\n\r\n    validateProperty = ({name, value}) => {\r\n        const obj = {\r\n            [name]: value\r\n        };\r\n        const schema = {\r\n            [name]: this.schema[name]\r\n        };\r\n        const joiPropertySchema = Joi.object(schema);\r\n        const {error} = joiPropertySchema.validate(obj);\r\n        return error ? error.details[0].message : null;\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const errors = this.validate();\r\n        this.setState({errors: errors || {}});\r\n        if (errors) return;\r\n\r\n        this.callServer()\r\n    };\r\n\r\n    callServer = () => {\r\n        const question = this.state.question.question;\r\n        this.props.onSubmit(question);\r\n        this.setState({question: {question: ''}});\r\n    }\r\n\r\n    handleChange = ({currentTarget: input}) => {\r\n        const errors = {...this.state.errors};\r\n        const errorMessage = this.validateProperty(input);\r\n        if (errorMessage) errors[input.name] = errorMessage;\r\n        else delete errors[input.name];\r\n\r\n        const question = {...this.state.question};\r\n        question[input.name] = input.value;\r\n        this.setState({question, errors});\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <div className=\"form-group\">\r\n                            {/*<label htmlFor=\"frage\">Frage:</label>*/}\r\n                            <textarea value={this.state.question.question}\r\n                                      onChange={this.handleChange} type=\"text\"\r\n                                      className=\"form-control\"\r\n                                      name=\"question\"\r\n                                      id=\"frage\"\r\n                                      aria-describedby=\"frageHilfe\"/>\r\n                            {this.state.errors.question &&\r\n                            <div className=\"alert alert-danger\">{this.state.errors.question}</div>}\r\n                        </div>\r\n                        <span className=\"float left\">Stell uns deine Frage</span>\r\n                        <button disabled={this.validate()} type=\"submit\"\r\n                                className=\"btn btn-primary float-right\"\r\n                                style={{width: \"150px\"}}\r\n                        >Senden</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuestionForm;","import React, {Component} from 'react';\r\n\r\nclass Question extends Component {\r\n\r\n    renderIconLike = (question) => {\r\n        if (localStorage.getItem(\"vote-\" + question.id)) return <i className=\"fa fa-heart\"/>;\r\n        return <i className=\"fa fa-heart-o\"/>;\r\n    }\r\n\r\n    renderIconDelte = (question) => {\r\n        if ((localStorage.getItem(\"creator-\" + question.id) && question.answered === 0) || this.props.creator) return <i\r\n            className=\"fa fa-trash\"/>;\r\n        return \"\";\r\n    }\r\n\r\n    renderIconAnswered = (question) => {\r\n        if (this.props.creator) return <i className=\"fa fa-check\"/>;\r\n        return \"\";\r\n    }\r\n\r\n    render() {\r\n        const {data, onVote, onDelete, onAnswered} = this.props;\r\n        const cardClass = data.answered ? \"card text-white bg-success\" : \"card\";\r\n\r\n            return (\r\n            <div className={cardClass}>\r\n                <div className=\"card-body\">\r\n                    <div>\r\n                        {data.question}\r\n                    </div>\r\n                    <div style={{textAlign: \"center\"}}>\r\n                        <span onClick={() => onVote(data)} style={{\r\n                            cursor: \"pointer\",\r\n                        }}\r\n                        title=\"Vote\" data-placement=\"top\" data-toggle=\"tooltip\"\r\n                        >{this.renderIconLike(data)} {data.votes}</span>\r\n                        <span onClick={() => onDelete(data)} style={{\r\n                            cursor: \"pointer\",\r\n                            marginLeft: \"20px\"\r\n                        }}\r\n                        title=\"Delete\" data-placement=\"top\"\r\n                        >{this.renderIconDelte(data)}</span>\r\n                        <span onClick={() => onAnswered(data)} style={{\r\n                            cursor: \"pointer\",\r\n                            marginLeft: \"20px\"\r\n                        }}\r\n                        title=\"Mark as answered\" data-placement=\"top\"\r\n                        >{this.renderIconAnswered(data)}</span>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Question;","import React, {Component} from 'react';\r\nimport Question from \"./question\";\r\n\r\nclass Questions extends Component {\r\n    render() {\r\n        const {questions, onVote, onDelete, creator, onAnswered} = this.props;\r\n        return questions.map(q =>\r\n                    <Question\r\n                        key={q.id}\r\n                        data={q}\r\n                        onVote={onVote}\r\n                        onDelete={onDelete}\r\n                        creator={creator}\r\n                        onAnswered={onAnswered}\r\n                    />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Questions;","import React, {Component} from 'react';\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <footer className=\"footer\" style={{marginTop: \"50px\"}}>\r\n                <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n                    <a href=\"https://www.hs-pforzheim.de/kontakt/impressum\">Impressum</a>\r\n                </div>\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, {Component} from 'react';\r\nimport axios from \"axios\";\r\nimport io from \"socket.io-client\";\r\nimport EventLink from \"./eventLink\";\r\nimport QuestionForm from \"./questionForm\";\r\nimport Questions from \"./questions\";\r\nimport Footer from \"./footer\";\r\n\r\nclass Events extends Component {\r\n    state = {\r\n        questions: [],\r\n        creator: false\r\n    };\r\n\r\n    socket;\r\n\r\n    urlApi = process.env.REACT_APP_APIURL;\r\n\r\n    async componentDidMount() {\r\n\r\n        const {id} = this.props.match.params;\r\n\r\n        if (this.props.match.params.key) {\r\n            const result = await axios.get(this.urlApi + \"/events/\" + id);\r\n            console.log(result);\r\n            if (result.data[0]) {\r\n                if (result.data[0].creator_key === this.props.match.params.key) this.setState({creator: true});\r\n            }\r\n        }\r\n\r\n        this.socket = io(this.urlApi);\r\n\r\n        this.socket.emit(\"join\", {id}, (data) => {\r\n            data.sort((a, b) => b.votes - a.votes);\r\n            this.setState({questions: data});\r\n        });\r\n\r\n        this.socket.on(\"questions\", (questions) => {\r\n            questions.sort((a, b) => a.answered - b.answered || b.votes - a.votes);\r\n            this.setState({questions});\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.socket.emit(\"disconnect\");\r\n        this.socket.off();\r\n    }\r\n\r\n    newQuestion = async (question) => {\r\n        const {id: eventId} = this.props.match.params;\r\n        const newQuestion = {\r\n            question: question,\r\n            event_id: eventId\r\n        };\r\n\r\n        // const questions = [...this.state.questions];\r\n        // newQuestion.id = response.data.insertId;\r\n        // newQuestion.event_id = eventId;\r\n        // newQuestion.votes = 0;\r\n        // questions.push(newQuestion);\r\n        // this.setState({questions});\r\n\r\n        this.socket.emit(\"newQuestion\", newQuestion);\r\n\r\n        this.socket.on(\"newQuestionResult\", (result) => {\r\n            console.log(result);\r\n            localStorage.setItem(\"creator-\" + result.insertId, true);\r\n        });\r\n\r\n\r\n    }\r\n\r\n    voteQuestion = async (questionId) => {\r\n        await axios.put(this.urlApi + '/questions/' + questionId);\r\n    }\r\n\r\n    handleVote = (question) => {\r\n        if (localStorage.getItem(\"vote-\" + question.id)) return;\r\n\r\n        let questions = [...this.state.questions];\r\n        const index = questions.indexOf(question);\r\n        question = {...questions[index]};\r\n        question.votes++;\r\n        questions[index] = question;\r\n        this.setState({questions});\r\n        localStorage.setItem(\"vote-\" + question.id, true);\r\n\r\n        this.socket.emit(\"vote\", question);\r\n    }\r\n\r\n    handleDelete = (question) => {\r\n        this.socket.emit(\"delete\", question);\r\n    }\r\n\r\n    handleAnswered = (question) => {\r\n        this.socket.emit(\"answered\", question);\r\n    }\r\n\r\n    render() {\r\n        const {questions} = this.state;\r\n        const eventLink = this.state.creator ?\r\n            <EventLink eventId={this.props.match.params.id}/> : \"\";\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                {eventLink}\r\n                <QuestionForm onSubmit={this.newQuestion}/>\r\n                <Questions questions={questions} onVote={this.handleVote}\r\n                           onDelete={this.handleDelete} creator={this.state.creator}\r\n                           onAnswered={this.handleAnswered}/>\r\n                           <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Events;","import React, {Component} from 'react';\r\n\r\nclass NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 style={{margin: \"20px\"}}>Not Found</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotFound;","import React, {Component} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Footer from \"./footer\";\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        redirect: \"\"\r\n    };\r\n\r\n    urlApi = process.env.REACT_APP_APIURL;\r\n    sub = process.env.REACT_APP_SUBDIRECTORIES;\r\n\r\n    handleNewEvent = async () => {\r\n        const eventId = this.generateId();\r\n        const eventKey = this.generateId();\r\n\r\n        const event = {\r\n            id: eventId,\r\n            creator_key: eventKey\r\n        };\r\n\r\n        const result = await axios.post(this.urlApi + \"/events\", event);\r\n        console.log(result);\r\n        if (result.data.serverStatus === 2) {\r\n            this.setState({redirect: this.sub + \"/events/\" + eventId + \"/\" + eventKey});\r\n        } else console.log(\"Event konnte nicht erstellt werden.\");\r\n    };\r\n\r\n    generateId = () => {\r\n        var result = '';\r\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        var charactersLength = characters.length;\r\n        for (var i = 0; i < 24; i++) {\r\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n        }\r\n        return result;\r\n    };\r\n\r\n    render() {\r\n        const {redirect} = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n                    <button style={{\r\n                        width: \"700px\",\r\n                        marginTop: \"50px\"\r\n                    }} className=\"btn btn-primary\" onClick={this.handleNewEvent}>Neues Event\r\n                    </button>\r\n                    {redirect ? (<Redirect to={redirect}/>) : ''}\r\n                </div>\r\n                <Footer/>\r\n            </React.Fragment>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, {Component} from 'react';\r\nimport {Route, Switch, Redirect} from 'react-router-dom';\r\nimport Events from \"./components/events\";\r\nimport NotFound from \"./components/notFound\";\r\nimport Home from \"./components/home\";\r\n\r\nclass App extends Component {\r\n    render() {\r\n        const sub = process.env.REACT_APP_SUBDIRECTORIES;\r\n        return (\r\n            <div>\r\n                <Switch>\r\n                    <Route path={sub + \"/events/:id/:key\"} component={Events}/>\r\n                    <Route path={sub + \"/events/:id\"} component={Events}/>\r\n                    <Route path={sub + \"/404\"} component={NotFound}/>\r\n                    <Route exact path={sub + \"/\"} component={Home}/>\r\n                    <Route exact path={sub + \"/*\"}>\r\n                        <Redirect to={sub + \"/404\"}/>\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App.jsx';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'font-awesome/css/font-awesome.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './App.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <BrowserRouter>\r\n          <App/>\r\n      </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}